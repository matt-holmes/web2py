(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> UUID('f01eae06-908d-11e5-99a1-b083fe8925cd') is not JSON serializable"
p3
sS'layer'
p4
S'/home/matt/Dev/web2py/applications/blog/controllers/invite_tool.py'
p5
sS'code'
p6
S"import uuid\nimport json\ndef index():\n    return locals()\t\n\t\ndef getAccountCollection():\n\tjsonObj = []\n\trows = db().select(db.accounts.ALL, orderby=db.accounts.name)\n\tfor row in rows:\n\t\tjsonObj.append({'name': row.name, 'id': row.id})\n\t\t\n\treturn response.json(jsonObj)\n\t\ndef getInviteeCollection():\n\tjsonObj = []\n\trows = db(db.invitees.account_id.contains(request.args)).select(orderby=db.invitees.first_name)\n\tfor row in rows:\n\t\tjsonObj.append({'id': row.uuid, 'first_name': row.first_name, 'last_name': row.last_name, 'email': row.email})\n\t\t\n\treturn response.json(jsonObj)\n\t\ndef postInvitee():\n    form = SQLFORM(db.invitees)\n    id = uuid.uuid1()\n    request.post_vars.uuid = id\n\n    if form.accepts(request, formname=None):\n        return json.dumps({'id': id})\n    elif form.errors:\n        return TABLE(*[TR(k, v) for k, v in form.errors.items()])\n\nresponse._vars=response._caller(postInvitee)\n"
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/matt/Dev/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/matt/Dev/web2py/applications/blog/controllers/invite_tool.py", line 32, in <module>\n  File "/home/matt/Dev/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/matt/Dev/web2py/applications/blog/controllers/invite_tool.py", line 28, in postInvitee\n    return json.dumps({\'id\': id})\n  File "/usr/lib/python2.7/json/__init__.py", line 243, in dumps\n    return _default_encoder.encode(obj)\n  File "/usr/lib/python2.7/json/encoder.py", line 207, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File "/usr/lib/python2.7/json/encoder.py", line 270, in iterencode\n    return _iterencode(o, 0)\n  File "/usr/lib/python2.7/json/encoder.py", line 184, in default\n    raise TypeError(repr(o) + " is not JSON serializable")\nTypeError: UUID(\'f01eae06-908d-11e5-99a1-b083fe8925cd\') is not JSON serializable\n'
p11
s.